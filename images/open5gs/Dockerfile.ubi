FROM registry.redhat.io/ubi9:latest as builder

ARG version=2.6.4
ENV VERSION=$version

LABEL org.opencontainers.image.authors="Alaitz Mendiola <alaitz@redhat.com>" \
      org.opencontainers.image.vendor="Red Hat Inc." \
      org.opencontainers.image.licenses="Apache-2.0" \
      org.opencontainers.image.version="$version"

RUN rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm \
        && rpm -ql epel-release     

RUN dnf install -y \
        python3 \
        python3-pip \
        python3-wheel \
        git \
        cmake \
        gcc \
        gcc-c++ \
        libgcrypt-devel \
        openssl-devel \
        libidn-devel \
        cyrus-sasl-devel \
        libbson-devel \
        libyaml-devel \
        libnghttp2-devel \
        libcurl-devel \
        libtins-devel \
        wget \
        iproute \
        net-tools \
        iputils \
        bind-utils \
        gettext \
        iptables \
        libtalloc \
        libtalloc.so.2 \
        && dnf clean all

RUN pip3 install ninja && pip install meson

COPY ubi/almalinux.repo /etc/yum.repos.d/
COPY ubi/RPM-GPG-KEY-AlmaLinux-9 /etc/pki/rpm-gpg/
RUN dnf install -y \
       --enablerepo=almalinux-baseos \
       --enablerepo=almalinux-appstream \
       --enablerepo=almalinux-crb \
            libmicrohttpd \
            gnutls \
            gnutls-c++ \
            gnutls-dane \
            nettle \
            gmp \
            gmp-c++ \
            gmp-devel \
            nettle-devel \
            libtasn1 \
            libtasn1-tools \
            libtasn1-devel \
            libidn2-devel \
            p11-kit-devel \
            gnutls-devel \
            lksctp-tools-devel \
            libzstd-devel \
            snappy \
            flex \
            bison \     
            libtalloc-devel \
            libmicrohttpd-devel \
            mongo-c-driver-libs \
            mongo-c-driver-devel

RUN	mkdir -p /opt/open5gs && \
      cd /tmp && \
      git clone https://github.com/open5gs/open5gs && \
	cd open5gs && \
      if [ "$VERSION" = "dev" ]; then \
            git checkout main; \
            wget https://api.github.com/repos/open5gs/open5gs/git/refs/heads/main -O /open5gs-ver.json; \
      else \
            git checkout v$VERSION; \
            wget https://api.github.com/repos/open5gs/open5gs/git/refs/tags/v$VERSION -O /open5gs-ver.json; \
      fi && \
      meson build --prefix=/opt/open5gs && \
      ln -s /opt/open5gs/subprojects/ /opt/open5gs/../subprojects && \
      ninja -C build install

CMD ["/bin/bash"]

FROM registry.redhat.io/ubi9-minimal:latest

ARG version=2.6.1
ENV VERSION=$version

LABEL org.opencontainers.image.authors="Alaitz Mendiola <alaitz@redhat.com>" \
      org.opencontainers.image.vendor="Red Hat Inc." \
      org.opencontainers.image.licenses="Apache-2.0" \
      org.opencontainers.image.version="$version"

COPY ubi/*.repo /etc/yum.repos.d/
COPY ubi/RPM-GPG-KEY-* /etc/pki/rpm-gpg/

RUN microdnf install -y \
      --enablerepo=almalinux-baseos \
      --enablerepo=almalinux-crb \
      --enablerepo=almalinux-appstream \
      --enablerepo=epel \
      libtalloc-devel \
      mongo-c-driver-libs \
      libyaml \
      info \
      lksctp-tools \
      libidn2 \
      libmicrohttpd \
      libnghttp2 \
      iproute \
      iputils \
      procps-ng \
      net-tools \
      iptables && microdnf clean all

ENV APP_ROOT=/opt/open5gs
COPY --from=builder /opt/open5gs/bin ${APP_ROOT}/bin/
COPY --from=builder /opt/open5gs/etc ${APP_ROOT}/etc/orig
COPY configs/ ${APP_ROOT}/etc/
COPY --from=builder /opt/open5gs/lib64/ /usr/local/lib/

ENV PATH=${APP_ROOT}/bin:${PATH} HOME=${APP_ROOT}
WORKDIR ${APP_ROOT}

RUN echo /usr/local/lib > /etc/ld.so.conf.d/open5gs.conf
RUN ldconfig
COPY entrypoint.sh /entrypoint.sh

#Default CONF values
ENV DB_URI=mongodb://mongo/open5gs

ENV IPV4_TUN_SUBNET="10.45.0.0/16" \
    IPV4_TUN_ADDR="10.45.0.1/16" \
    IPV6_TUN_ADDR="cafe::1/64" \
    ENABLE_NAT=true

ENTRYPOINT ["/entrypoint.sh"]
CMD ["/bin/bash"]

